import org.apache.commons.dbcp2.BasicDataSource
import org.springframework.jdbc.core.BeanPropertyRowMapper
import org.springframework.jdbc.core.JdbcTemplate
import javax.swing.JOptionPane

fun main() {
    val dataSource = BasicDataSource();
    dataSource.driverClassName = "org.h2.Driver";
    dataSource.url ="jdbc:h2:mem:sptech"
    dataSource.username = "sa"
    dataSource.password = ""
    val jdbcTemplate = JdbcTemplate(dataSource)

    jdbcTemplate.execute("""
        CREATE TABLE pizza(
            codigo INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            sabor varchar(20) NOT NULL,
            preco FLOAT,
            quantidade INT
        )
    """)
    var boleano = true
    while(boleano){
        var escolha = JOptionPane.showInputDialog(
            "Quer cadastrar uma pizza ? S ou N"
        )

        if(escolha == "N"){
            boleano = false
        } else {
            var pizza1 = Pizza()
            pizza1.sabor = JOptionPane.showInputDialog("Sabor da pizza?")
            pizza1.preco = JOptionPane.showInputDialog("Pre√ßo da pizza?").toDouble()
            pizza1.quantidade = JOptionPane.showInputDialog("Quantidade da pizza?").toInt()

            jdbcTemplate.update("""
        insert into pizza(sabor, preco, quantidade) values
        ('${pizza1.sabor}', ${pizza1.preco}, ${pizza1.quantidade})
    """)

        }

        var opcao = JOptionPane.showInputDialog("Qual pizza quer vender? de 1 a X").toInt()

        val listaPiza1:List<Pizza> = jdbcTemplate.query(
            "select * from pizza",
            BeanPropertyRowMapper(Pizza::class.java)
        )
        if(opcao < 1 && opcao > listaPiza1.size ){
            print("Valor Invalido")
        } else{
            if(listaPiza1.size > 0){
                jdbcTemplate.update(
                    "DELETE FROM Pizza WHERE codigo = ${opcao}"
                )
                println("Pizza atualizada de ${listaPiza1.size } para ${listaPiza1.size - 1}")
            } else {
                println("A pizza de Y esta zerada")
            }
        }

    }

}